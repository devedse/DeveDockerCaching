{
    "$schema": "https://raw.githubusercontent.com/Microsoft/azure-pipelines-task-lib/master/tasks.schema.json",
    "id": "c08998b8-8843-4dff-ab54-c262868dd590",
    "name": "DeveDockerCaching",
    "friendlyName": "Deve Docker Caching",
    "description": "Task to use in combination with Docker to pull/push cached layers",
    "helpMarkDown": "",
    "category": "Utility",
    "author": "Devedse",
    "version": {
        "Major": 1,
        "Minor": 0,
        "Patch": 0
    },
    "instanceNameFormat": "Docker Cache - $(action)",
    "groups": [
        {
            "name": "cachingConfiguration",
            "displayName": "Docker Caching Configuration",
            "isExpanded": true
        }
    ],
    "inputs": [
        {
            "name": "action",
            "type": "pickList",
            "label": "Cache Action",
            "defaultValue": "dockerPullCache",
            "required": true,
            "options": {
                "dockerPullCache": "dockerPullCache",
                "dockerPushCache": "dockerPushCache",
                "dockerComposePullCache": "dockerComposePullCache",
                "dockerComposePushCache": "dockerComposePushCache"
            },
            "properties": {
                "EditableOptions": "False"
            },
            "groupName": "cachingConfiguration",
            "helpMarkDown": "Select action."
        },
        {	
            "name": "containerRegistry",	
            "type": "connectedService:dockerregistry",	
            "label": "Container registry",	
            "groupName": "cachingConfiguration",	
            "required": false,
            "helpMarkDown": "Select a Docker registry service connection. Required for commands that need to authenticate with a registry."	
        },	
        {	
            "name": "repository",	
            "label": "Container repository",	
            "type": "string",
            "required": false,
            "helpMarkDown": "Name of the repository.",	
            "defaultValue": "",
            "visibleRule": "action = dockerPushCache || action = dockerPullCache",
            "groupName": "cachingConfiguration",
            "properties": {	
                "EditableOptions": "True"	
            }
        },
        {
            "name": "Dockerfile",
            "type": "filePath",
            "label": "Dockerfile",
            "defaultValue": "**/Dockerfile",
            "required": true,
            "visibleRule": "action = dockerPushCache || action = dockerPullCache",
            "groupName": "cachingConfiguration",
            "helpMarkDown": "Path to the Dockerfile."
        },
        {
            "name": "DockerComposefile",
            "type": "filePath",
            "label": "DockerComposefile",
            "defaultValue": "**/docker-compose.yml",
            "required": true,
            "visibleRule": "action = dockerComposePullCache || action = dockerComposePushCache",
            "groupName": "cachingConfiguration",
            "helpMarkDown": "Path to the primary Docker Compose file to use."
        },
        {
            "name": "additionalDockerComposeFiles",
            "type": "multiLine",
            "properties": {
                "resizable": "true",
                "rows": "2"
            },
            "label": "Additional Docker Compose Files",
            "groupName": "cachingConfiguration",
            "visibleRule": "action = dockerComposePullCache || action = dockerComposePushCache",
            "helpMarkDown": "Additional Docker Compose files to be combined with the primary Docker Compose file. Relative paths are resolved relative to the directory containing the primary Docker Compose file. If a specified file is not found, it is ignored. Specify each file path on a new line."
        },
        {
            "name": "dockerComposeFileArgs",
            "type": "multiLine",
            "properties": {
                "resizable": "true",
                "rows": "2"
            },
            "label": "Environment Variables",
            "groupName": "cachingConfiguration",
            "visibleRule": "action = dockerComposePullCache || action = dockerComposePushCache",
            "helpMarkDown": "Environment variables to be set during the command. Specify each name=value pair on a new line."
        },
        {
            "name": "projectName",
            "type": "string",
            "label": "Project Name",
            "defaultValue": "$(Build.Repository.Name)",            
            "groupName": "cachingConfiguration",
            "visibleRule": "action = dockerComposePullCache || action = dockerComposePushCache",
            "helpMarkDown": "Project name used for default naming of images and containers."
        },
        {
            "name": "qualifyImageNames",
            "type": "boolean",
            "label": "Qualify Image Names",
            "defaultValue": "true",            
            "groupName": "cachingConfiguration",
            "visibleRule": "action = dockerComposePullCache || action = dockerComposePushCache",
            "helpMarkDown": "Qualify image names for built services with the Docker registry service connection's hostname if not otherwise specified."
        },
        {
            "name": "cacheImagePostfix",
            "type": "string",
            "label": "Cache Image Postfix",
            "defaultValue": "-staging",
            "groupName": "cachingConfiguration",
            "helpMarkDown": "The postfix to append to the cached docker image names. E.g. DeveDocker-Staging where Staging is the PostFix"
        },
        {
            "name": "dockerBuildOutput",
            "type": "string",
            "label": "Docker build output",
            "defaultValue": "$(dockerBuildCommand.DockerOutput)",
            "required": true,
            "visibleRule": "action = dockerPushCache || action = dockerComposePushCache",
            "groupName": "cachingConfiguration",
            "helpMarkDown": "The output variable value from the Docker build output. This can be found in the 'Output Variables' for the Docker build command."
        }
    ],
    "outputVariables": [
        {
            "name": "cacheArgumentDockerBuild",
            "description": "The argument you should pass to your docker build command. It contains the --cache-from=.... items to be able to use caching"
        }
    ],
    "execution": {
        "Node10": {
            "target": "index.js"
        }
    }
}